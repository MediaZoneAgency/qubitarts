plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    signingConfigs {
        release {
            keyAlias 'upload' // Replace with your keystore alias
            keyPassword 'Doaa12345' // Replace with your key password
            storeFile file('release-key.jks') // Replace with the path to your keystore file
            storePassword 'Doaa12345' // Replace with your keystore password
        }
    }
    namespace = "com.mycompany.qubitarts"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = 17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.mycompany.qubitarts"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = 32
        versionName = "2.0.0"
    }

    buildTypes {
        release {

            minifyEnabled true
            shrinkResources true
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig  signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {

                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source = "../.."
}
