name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: android-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_CHANNEL: stable
  JAVA_VERSION: '17'
  # Path to your Flutter project root (where pubspec.yaml is)
  FLUTTER_PROJECT_DIR: .
  # Android module directory (contains settings.gradle / app/)
  ANDROID_DIR: android
  GRADLE_VERSION: 8.7

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Flutter (${{ env.FLUTTER_CHANNEL }})
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Flutter version
        run: flutter --version

      # -------- Cache Flutter pub packages --------
      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ env.FLUTTER_PROJECT_DIR }}/.dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles(format('{0}/pubspec.lock', env.FLUTTER_PROJECT_DIR)) }}
          restore-keys: |
            pub-${{ runner.os }}-

      # -------- pub get at Flutter project root --------
      - name: Flutter pub get
        working-directory: ${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter pub get

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Generate local.properties *inside android/*
      # sdk.dir comes from the action; flutter.sdk derived from `which flutter`
      - name: Generate local.properties
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          echo "sdk.dir=${ANDROID_SDK_ROOT:-$ANDROID_HOME}" > local.properties
          echo "flutter.sdk=$(dirname "$(dirname "$(which flutter)")")" >> local.properties
          echo "=== android/local.properties ==="
          cat local.properties

      # -------- Cache Gradle --------
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles(format('{0}/gradle/wrapper/gradle-wrapper.properties', env.ANDROID_DIR)) }}-${{ hashFiles(format('{0}/build.gradle*', env.ANDROID_DIR)) }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Ensure Gradle wrapper (8.7). If missing, generate one.
      - name: Provision Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Ensure Gradle wrapper
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          if [ ! -x ./gradlew ]; then
            echo "Gradle wrapper not found. Generating..."
            gradle wrapper --gradle-version ${{ env.GRADLE_VERSION }}
          fi
          ./gradlew --version

      # -------- Lint --------
      - name: Run Lint
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew --no-daemon :app:lintDebug

      - name: Upload lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: ${{ env.ANDROID_DIR }}/app/build/reports/lint-results-debug.html
          if-no-files-found: warn

      # -------- Unit tests (optional but recommended) --------
      - name: Run unit tests
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew --no-daemon :app:testDebugUnitTest

      - name: Upload unit test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: |
            ${{ env.ANDROID_DIR }}/app/build/test-results/testDebugUnitTest/*
            ${{ env.ANDROID_DIR }}/app/build/reports/tests/testDebugUnitTest/*
          if-no-files-found: warn

      # -------- Assemble Debug APK --------
      - name: Build Debug APK
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew --no-daemon :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ env.ANDROID_DIR }}/app/build/outputs/apk/debug/*.apk
